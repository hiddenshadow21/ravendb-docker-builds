name: Docker image builder

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'RavenDB Version'
        required: true
        type: string

env:
  IS_NIGHTLY: ${{ contains(inputs.version, 'nightly') }}
  DOCKER_REPO: 'ravendb/ravendb'

jobs:
  linux:
    strategy:
      matrix:
        arch: [ x64, arm32v7, arm64v8 ]
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
      - name: Get ravendb majorminor version
        run: |
          v=$(echo ${{ inputs.version }} | cut -d. -f1,2)
          echo "RAVEN_MAJOR_MINOR=$v" >> $GITHUB_ENV
      - uses: actions/checkout@v3
        with:
          repository: 'ravendb/ravendb'
          ref: "v${{ env.RAVEN_MAJOR_MINOR }}"

      - name: Download package
        run: |
          case "${{ matrix.arch }}" in
            "arm32v7")
              downloadURL="https://daily-builds.s3.amazonaws.com/RavenDB-${{ inputs.version }}-raspberry-pi.tar.bz2"
              ;;
            "arm64v8")
              downloadURL="https://daily-builds.s3.amazonaws.com/RavenDB-${{ inputs.version }}-linux-arm64.tar.bz2"
              ;;
            
            "x64")
              downloadURL="https://daily-builds.s3.amazonaws.com/RavenDB-${{ inputs.version }}-linux-x64.tar.bz2"
              ;;
            *)
              echo "Unsupported architecture"
              ;;
          esac
          mkdir artifacts
          wget -P "artifacts" "$downloadURL"

      - name: Build image
        run: |
          [[ ${{ env.IS_NIGHTLY }} == true ]] && $DOCKER_REPO="$DOCKER_REPO-nightly"
          docker pull tonistiigi/binfmt:latest
          docker run --privileged --rm tonistiigi/binfmt --uninstall qemu-*
          docker run --privileged --rm tonistiigi/binfmt --install all
          
          pwsh build-ubuntu.ps1 -Repo $DOCKER_REPO -Arch ${{ matrix.arch }}
        working-directory: docker


  # windows:
  #   strategy:
  #     matrix:
  #       data: [ { os: "2019", arch: "1809"}, { os: "2022", arch: "ltsc2022"} ]
  #     fail-fast: false
  #   runs-on: windows-${{ matrix.data.os }}
  #   steps:
  #     - uses: actions/checkout@v2